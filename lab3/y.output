State 1 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 96 conflicts: 13 shift/reduce
State 123 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: exp AND exp
    3    | exp OR exp
    4    | lvalue
    5    | voidexp
    6    | NIL
    7    | LPAREN seqexp RPAREN
    8    | LPAREN RPAREN
    9    | INT
   10    | STRING
   11    | MINUS exp
   12    | ID LPAREN args RPAREN
   13    | ID LPAREN RPAREN
   14    | exp PLUS exp
   15    | exp MINUS exp
   16    | exp TIMES exp
   17    | exp DIVIDE exp
   18    | exp EQ exp
   19    | exp NEQ exp
   20    | exp LT exp
   21    | exp LE exp
   22    | exp GT exp
   23    | exp GE exp
   24    | ID LBRACE recorditems RBRACE
   25    | ID LBRACE RBRACE
   26    | ID LBRACK exp RBRACK OF exp

   27 voidexp: lvalue ASSIGN exp
   28        | IF exp THEN exp ELSE exp
   29        | IF exp THEN exp
   30        | WHILE exp DO exp
   31        | FOR ID ASSIGN exp TO exp DO exp
   32        | BREAK
   33        | LET decs IN seqexp END

   34 exps: exp
   35     | exp SEMICOLON exps

   36 seqexp: exps

   37 args: exp
   38     | exp COMMA args

   39 recorditem: ID EQ exp

   40 recorditems: recorditem
   41            | recorditem COMMA recorditems

   42 decs: %empty
   43     | decs_nonempty

   44 decs_nonempty: dec decs

   45 dec: tydecs
   46    | vardec
   47    | fundecs

   48 tydecs: tydec tydecs
   49       | tydec

   50 tydec: TYPE ID EQ ty

   51 ty: ID
   52   | LBRACE tyfields RBRACE
   53   | ARRAY OF ID

   54 tyfields: %empty
   55         | tyfields_nonempty

   56 tyfields_nonempty: tyfield COMMA tyfields
   57                  | tyfield

   58 tyfield: ID COLON ID

   59 vardec: VAR ID ASSIGN exp
   60       | VAR ID COLON ID ASSIGN exp

   61 fundecs: fundec
   62        | fundec fundecs

   63 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   64       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   65 lvalue: ID
   66       | lvalue DOT ID
   67       | lvalue LBRACK exp RBRACK
   68       | ID LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 12 13 24 25 26 31 39 50 51 53 58 59 60 63 64 65 66 68
STRING (259) 10
INT (260) 9
COMMA (261) 38 41 56
COLON (262) 58 60 64
SEMICOLON (263) 35
LPAREN (264) 7 8 12 13 63 64
RPAREN (265) 7 8 12 13 63 64
LBRACK (266) 26 67 68
RBRACK (267) 26 67 68
LBRACE (268) 24 25 52
RBRACE (269) 24 25 52
DOT (270) 66
PLUS (271) 14
MINUS (272) 11 15
TIMES (273) 16
DIVIDE (274) 17
EQ (275) 18 39 50 63 64
NEQ (276) 19
LT (277) 20
LE (278) 21
GT (279) 22
GE (280) 23
AND (281) 2
OR (282) 3
ASSIGN (283) 27 31 59 60
ARRAY (284) 53
IF (285) 28 29
THEN (286) 28 29
ELSE (287) 28
WHILE (288) 30
FOR (289) 31
TO (290) 31
DO (291) 30 31
LET (292) 33
IN (293) 33
END (294) 33
OF (295) 26 53
BREAK (296) 32
NIL (297) 6
FUNCTION (298) 63 64
VAR (299) 59 60
TYPE (300) 50
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26, on right: 1 2 3 11 14 15 16 17 18 19 20 21 22 23 26
    27 28 29 30 31 34 35 37 38 39 59 60 63 64 67 68
voidexp (50)
    on left: 27 28 29 30 31 32 33, on right: 5
exps (51)
    on left: 34 35, on right: 35 36
seqexp (52)
    on left: 36, on right: 7 33
args (53)
    on left: 37 38, on right: 12 38
recorditem (54)
    on left: 39, on right: 40 41
recorditems (55)
    on left: 40 41, on right: 24 41
decs (56)
    on left: 42 43, on right: 33 44
decs_nonempty (57)
    on left: 44, on right: 43
dec (58)
    on left: 45 46 47, on right: 44
tydecs (59)
    on left: 48 49, on right: 45 48
tydec (60)
    on left: 50, on right: 48 49
ty (61)
    on left: 51 52 53, on right: 50
tyfields (62)
    on left: 54 55, on right: 52 56 63 64
tyfields_nonempty (63)
    on left: 56 57, on right: 55
tyfield (64)
    on left: 58, on right: 56 57
vardec (65)
    on left: 59 60, on right: 46
fundecs (66)
    on left: 61 62, on right: 47 62
fundec (67)
    on left: 63 64, on right: 61 62
lvalue (68)
    on left: 65 66 67 68, on right: 4 27 66 67


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    voidexp  go to state 14
    lvalue   go to state 15


State 1

   12 exp: ID . LPAREN args RPAREN
   13    | ID . LPAREN RPAREN
   24    | ID . LBRACE recorditems RBRACE
   25    | ID . LBRACE RBRACE
   26    | ID . LBRACK exp RBRACK OF exp
   65 lvalue: ID .
   68       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 16
    LBRACK  shift, and go to state 17
    LBRACE  shift, and go to state 18

    LBRACK    [reduce using rule 65 (lvalue)]
    $default  reduce using rule 65 (lvalue)


State 2

   10 exp: STRING .

    $default  reduce using rule 10 (exp)


State 3

    9 exp: INT .

    $default  reduce using rule 9 (exp)


State 4

    7 exp: LPAREN . seqexp RPAREN
    8    | LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 19
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 20
    voidexp  go to state 14
    exps     go to state 21
    seqexp   go to state 22
    lvalue   go to state 15


State 5

   11 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 23
    voidexp  go to state 14
    lvalue   go to state 15


State 6

   28 voidexp: IF . exp THEN exp ELSE exp
   29        | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 24
    voidexp  go to state 14
    lvalue   go to state 15


State 7

   30 voidexp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 25
    voidexp  go to state 14
    lvalue   go to state 15


State 8

   31 voidexp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 26


State 9

   33 voidexp: LET . decs IN seqexp END

    FUNCTION  shift, and go to state 27
    VAR       shift, and go to state 28
    TYPE      shift, and go to state 29

    $default  reduce using rule 42 (decs)

    decs           go to state 30
    decs_nonempty  go to state 31
    dec            go to state 32
    tydecs         go to state 33
    tydec          go to state 34
    vardec         go to state 35
    fundecs        go to state 36
    fundec         go to state 37


State 10

   32 voidexp: BREAK .

    $default  reduce using rule 32 (voidexp)


State 11

    6 exp: NIL .

    $default  reduce using rule 6 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 38


State 13

    1 program: exp .
    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 1 (program)


State 14

    5 exp: voidexp .

    $default  reduce using rule 5 (exp)


State 15

    4 exp: lvalue .
   27 voidexp: lvalue . ASSIGN exp
   66 lvalue: lvalue . DOT ID
   67       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 51
    DOT     shift, and go to state 52
    ASSIGN  shift, and go to state 53

    $default  reduce using rule 4 (exp)


State 16

   12 exp: ID LPAREN . args RPAREN
   13    | ID LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 54
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 55
    voidexp  go to state 14
    args     go to state 56
    lvalue   go to state 15


State 17

   26 exp: ID LBRACK . exp RBRACK OF exp
   68 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 57
    voidexp  go to state 14
    lvalue   go to state 15


State 18

   24 exp: ID LBRACE . recorditems RBRACE
   25    | ID LBRACE . RBRACE

    ID      shift, and go to state 58
    RBRACE  shift, and go to state 59

    recorditem   go to state 60
    recorditems  go to state 61


State 19

    8 exp: LPAREN RPAREN .

    $default  reduce using rule 8 (exp)


State 20

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   34 exps: exp .
   35     | exp . SEMICOLON exps

    SEMICOLON  shift, and go to state 62
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50

    $default  reduce using rule 34 (exps)


State 21

   36 seqexp: exps .

    $default  reduce using rule 36 (seqexp)


State 22

    7 exp: LPAREN seqexp . RPAREN

    RPAREN  shift, and go to state 63


State 23

    2 exp: exp . AND exp
    3    | exp . OR exp
   11    | MINUS exp .
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    $default  reduce using rule 11 (exp)


State 24

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   28 voidexp: IF exp . THEN exp ELSE exp
   29        | IF exp . THEN exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    THEN    shift, and go to state 64


State 25

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   30 voidexp: WHILE exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 65


State 26

   31 voidexp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 66


State 27

   63 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   64       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 67


State 28

   59 vardec: VAR . ID ASSIGN exp
   60       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 68


State 29

   50 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 69


State 30

   33 voidexp: LET decs . IN seqexp END

    IN  shift, and go to state 70


State 31

   43 decs: decs_nonempty .

    $default  reduce using rule 43 (decs)


State 32

   44 decs_nonempty: dec . decs

    FUNCTION  shift, and go to state 27
    VAR       shift, and go to state 28
    TYPE      shift, and go to state 29

    $default  reduce using rule 42 (decs)

    decs           go to state 71
    decs_nonempty  go to state 31
    dec            go to state 32
    tydecs         go to state 33
    tydec          go to state 34
    vardec         go to state 35
    fundecs        go to state 36
    fundec         go to state 37


State 33

   45 dec: tydecs .

    $default  reduce using rule 45 (dec)


State 34

   48 tydecs: tydec . tydecs
   49       | tydec .

    TYPE  shift, and go to state 29

    TYPE      [reduce using rule 49 (tydecs)]
    $default  reduce using rule 49 (tydecs)

    tydecs  go to state 72
    tydec   go to state 34


State 35

   46 dec: vardec .

    $default  reduce using rule 46 (dec)


State 36

   47 dec: fundecs .

    $default  reduce using rule 47 (dec)


State 37

   61 fundecs: fundec .
   62        | fundec . fundecs

    FUNCTION  shift, and go to state 27

    FUNCTION  [reduce using rule 61 (fundecs)]
    $default  reduce using rule 61 (fundecs)

    fundecs  go to state 73
    fundec   go to state 37


State 38

    0 $accept: program $end .

    $default  accept


State 39

   14 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 74
    voidexp  go to state 14
    lvalue   go to state 15


State 40

   15 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 75
    voidexp  go to state 14
    lvalue   go to state 15


State 41

   16 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 76
    voidexp  go to state 14
    lvalue   go to state 15


State 42

   17 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 77
    voidexp  go to state 14
    lvalue   go to state 15


State 43

   18 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 78
    voidexp  go to state 14
    lvalue   go to state 15


State 44

   19 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 79
    voidexp  go to state 14
    lvalue   go to state 15


State 45

   20 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 80
    voidexp  go to state 14
    lvalue   go to state 15


State 46

   21 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 81
    voidexp  go to state 14
    lvalue   go to state 15


State 47

   22 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 82
    voidexp  go to state 14
    lvalue   go to state 15


State 48

   23 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 83
    voidexp  go to state 14
    lvalue   go to state 15


State 49

    2 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 84
    voidexp  go to state 14
    lvalue   go to state 15


State 50

    3 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 85
    voidexp  go to state 14
    lvalue   go to state 15


State 51

   67 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 86
    voidexp  go to state 14
    lvalue   go to state 15


State 52

   66 lvalue: lvalue DOT . ID

    ID  shift, and go to state 87


State 53

   27 voidexp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 88
    voidexp  go to state 14
    lvalue   go to state 15


State 54

   13 exp: ID LPAREN RPAREN .

    $default  reduce using rule 13 (exp)


State 55

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   37 args: exp .
   38     | exp . COMMA args

    COMMA   shift, and go to state 89
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 37 (args)


State 56

   12 exp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 90


State 57

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   26    | ID LBRACK exp . RBRACK OF exp
   68 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 91
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 58

   39 recorditem: ID . EQ exp

    EQ  shift, and go to state 92


State 59

   25 exp: ID LBRACE RBRACE .

    $default  reduce using rule 25 (exp)


State 60

   40 recorditems: recorditem .
   41            | recorditem . COMMA recorditems

    COMMA  shift, and go to state 93

    $default  reduce using rule 40 (recorditems)


State 61

   24 exp: ID LBRACE recorditems . RBRACE

    RBRACE  shift, and go to state 94


State 62

   35 exps: exp SEMICOLON . exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 20
    voidexp  go to state 14
    exps     go to state 95
    lvalue   go to state 15


State 63

    7 exp: LPAREN seqexp RPAREN .

    $default  reduce using rule 7 (exp)


State 64

   28 voidexp: IF exp THEN . exp ELSE exp
   29        | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 96
    voidexp  go to state 14
    lvalue   go to state 15


State 65

   30 voidexp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 97
    voidexp  go to state 14
    lvalue   go to state 15


State 66

   31 voidexp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 98
    voidexp  go to state 14
    lvalue   go to state 15


State 67

   63 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   64       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 99


State 68

   59 vardec: VAR ID . ASSIGN exp
   60       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 100
    ASSIGN  shift, and go to state 101


State 69

   50 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 102


State 70

   33 voidexp: LET decs IN . seqexp END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 20
    voidexp  go to state 14
    exps     go to state 21
    seqexp   go to state 103
    lvalue   go to state 15


State 71

   44 decs_nonempty: dec decs .

    $default  reduce using rule 44 (decs_nonempty)


State 72

   48 tydecs: tydec tydecs .

    $default  reduce using rule 48 (tydecs)


State 73

   62 fundecs: fundec fundecs .

    $default  reduce using rule 62 (fundecs)


State 74

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   14    | exp PLUS exp .
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 14 (exp)


State 75

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   15    | exp MINUS exp .
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 15 (exp)


State 76

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   16    | exp TIMES exp .
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    $default  reduce using rule 16 (exp)


State 77

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   17    | exp DIVIDE exp .
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    $default  reduce using rule 17 (exp)


State 78

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   18    | exp EQ exp .
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 79

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   19    | exp NEQ exp .
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 80

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   20    | exp LT exp .
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 81

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   21    | exp LE exp .
   22    | exp . GT exp
   23    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


State 82

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   22    | exp GT exp .
   23    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


State 83

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   23    | exp GE exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


State 84

    2 exp: exp . AND exp
    2    | exp AND exp .
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48

    $default  reduce using rule 2 (exp)


State 85

    2 exp: exp . AND exp
    3    | exp . OR exp
    3    | exp OR exp .
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49

    $default  reduce using rule 3 (exp)


State 86

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   67 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 104
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 87

   66 lvalue: lvalue DOT ID .

    $default  reduce using rule 66 (lvalue)


State 88

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   27 voidexp: lvalue ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 27 (voidexp)


State 89

   38 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 55
    voidexp  go to state 14
    args     go to state 105
    lvalue   go to state 15


State 90

   12 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 12 (exp)


State 91

   26 exp: ID LBRACK exp RBRACK . OF exp
   68 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 106

    $default  reduce using rule 68 (lvalue)


State 92

   39 recorditem: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 107
    voidexp  go to state 14
    lvalue   go to state 15


State 93

   41 recorditems: recorditem COMMA . recorditems

    ID  shift, and go to state 58

    recorditem   go to state 60
    recorditems  go to state 108


State 94

   24 exp: ID LBRACE recorditems RBRACE .

    $default  reduce using rule 24 (exp)


State 95

   35 exps: exp SEMICOLON exps .

    $default  reduce using rule 35 (exps)


State 96

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   28 voidexp: IF exp THEN exp . ELSE exp
   29        | IF exp THEN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    ELSE    shift, and go to state 109

    PLUS      [reduce using rule 29 (voidexp)]
    MINUS     [reduce using rule 29 (voidexp)]
    TIMES     [reduce using rule 29 (voidexp)]
    DIVIDE    [reduce using rule 29 (voidexp)]
    EQ        [reduce using rule 29 (voidexp)]
    NEQ       [reduce using rule 29 (voidexp)]
    LT        [reduce using rule 29 (voidexp)]
    LE        [reduce using rule 29 (voidexp)]
    GT        [reduce using rule 29 (voidexp)]
    GE        [reduce using rule 29 (voidexp)]
    AND       [reduce using rule 29 (voidexp)]
    OR        [reduce using rule 29 (voidexp)]
    ELSE      [reduce using rule 29 (voidexp)]
    $default  reduce using rule 29 (voidexp)


State 97

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   30 voidexp: WHILE exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 30 (voidexp)


State 98

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   31 voidexp: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    TO      shift, and go to state 110


State 99

   63 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   64       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 111

    $default  reduce using rule 54 (tyfields)

    tyfields           go to state 112
    tyfields_nonempty  go to state 113
    tyfield            go to state 114


State 100

   60 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 115


State 101

   59 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 116
    voidexp  go to state 14
    lvalue   go to state 15


State 102

   50 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 117
    LBRACE  shift, and go to state 118
    ARRAY   shift, and go to state 119

    ty  go to state 120


State 103

   33 voidexp: LET decs IN seqexp . END

    END  shift, and go to state 121


State 104

   67 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 67 (lvalue)


State 105

   38 args: exp COMMA args .

    $default  reduce using rule 38 (args)


State 106

   26 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 122
    voidexp  go to state 14
    lvalue   go to state 15


State 107

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   39 recorditem: ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 39 (recorditem)


State 108

   41 recorditems: recorditem COMMA recorditems .

    $default  reduce using rule 41 (recorditems)


State 109

   28 voidexp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 123
    voidexp  go to state 14
    lvalue   go to state 15


State 110

   31 voidexp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 124
    voidexp  go to state 14
    lvalue   go to state 15


State 111

   58 tyfield: ID . COLON ID

    COLON  shift, and go to state 125


State 112

   63 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   64       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 126


State 113

   55 tyfields: tyfields_nonempty .

    $default  reduce using rule 55 (tyfields)


State 114

   56 tyfields_nonempty: tyfield . COMMA tyfields
   57                  | tyfield .

    COMMA  shift, and go to state 127

    $default  reduce using rule 57 (tyfields_nonempty)


State 115

   60 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 128


State 116

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   59 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 59 (vardec)


State 117

   51 ty: ID .

    $default  reduce using rule 51 (ty)


State 118

   52 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 111

    $default  reduce using rule 54 (tyfields)

    tyfields           go to state 129
    tyfields_nonempty  go to state 113
    tyfield            go to state 114


State 119

   53 ty: ARRAY . OF ID

    OF  shift, and go to state 130


State 120

   50 tydec: TYPE ID EQ ty .

    $default  reduce using rule 50 (tydec)


State 121

   33 voidexp: LET decs IN seqexp END .

    $default  reduce using rule 33 (voidexp)


State 122

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   26    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 26 (exp)


State 123

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   28 voidexp: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 28 (voidexp)]
    MINUS     [reduce using rule 28 (voidexp)]
    TIMES     [reduce using rule 28 (voidexp)]
    DIVIDE    [reduce using rule 28 (voidexp)]
    EQ        [reduce using rule 28 (voidexp)]
    NEQ       [reduce using rule 28 (voidexp)]
    LT        [reduce using rule 28 (voidexp)]
    LE        [reduce using rule 28 (voidexp)]
    GT        [reduce using rule 28 (voidexp)]
    GE        [reduce using rule 28 (voidexp)]
    AND       [reduce using rule 28 (voidexp)]
    OR        [reduce using rule 28 (voidexp)]
    $default  reduce using rule 28 (voidexp)


State 124

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   31 voidexp: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 131


State 125

   58 tyfield: ID COLON . ID

    ID  shift, and go to state 132


State 126

   63 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   64       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 133
    EQ     shift, and go to state 134


State 127

   56 tyfields_nonempty: tyfield COMMA . tyfields

    ID  shift, and go to state 111

    $default  reduce using rule 54 (tyfields)

    tyfields           go to state 135
    tyfields_nonempty  go to state 113
    tyfield            go to state 114


State 128

   60 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 136
    voidexp  go to state 14
    lvalue   go to state 15


State 129

   52 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 137


State 130

   53 ty: ARRAY OF . ID

    ID  shift, and go to state 138


State 131

   31 voidexp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 139
    voidexp  go to state 14
    lvalue   go to state 15


State 132

   58 tyfield: ID COLON ID .

    $default  reduce using rule 58 (tyfield)


State 133

   64 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 140


State 134

   63 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 141
    voidexp  go to state 14
    lvalue   go to state 15


State 135

   56 tyfields_nonempty: tyfield COMMA tyfields .

    $default  reduce using rule 56 (tyfields_nonempty)


State 136

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   60 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 60 (vardec)


State 137

   52 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 52 (ty)


State 138

   53 ty: ARRAY OF ID .

    $default  reduce using rule 53 (ty)


State 139

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   31 voidexp: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 31 (voidexp)


State 140

   64 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 142


State 141

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   63 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 63 (fundec)


State 142

   64 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 143
    voidexp  go to state 14
    lvalue   go to state 15


State 143

    2 exp: exp . AND exp
    3    | exp . OR exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   64 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 64 (fundec)
